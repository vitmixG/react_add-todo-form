{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","isComplete","completed","id","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","isUserError","setSelectedUserError","isTitleError","setTitleError","todoList","setTodoList","setTitleNew","setUserId","onSubmit","event","preventDefault","trim","newTodo","Math","max","prevTodo","handlerNewTodo","type","placeholder","value","onChange","target","Number","disabled","userSelect","ReactDOM","render","document","getElementById"],"mappings":"4NAMaA,EAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzC,OACE,8BACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,UCFDC,EAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvCN,EAGEM,EAHFN,KACAO,EAEED,EAFFC,MAIIC,EAFFF,EADFG,WAG8B,sBAEhC,OACE,0BAAS,UAASH,EAAKI,GAAIT,UAAS,mBAAcO,GAAlD,UACE,oBAAI,UAAQ,aAAaP,UAAU,kBAAnC,SAAsDM,IACrDP,GACI,cAAC,EAAD,CAAUA,KAAMA,QCddW,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAACP,GAAD,OACT,oBACEL,UAAU,aADZ,SAIE,cAAC,EAAD,CAAUK,KAAMA,KAFXA,EAAKI,UCZH,GACb,CACEA,GAAI,EACJN,KAAM,gBACNU,SAAU,OACVX,MAAO,qBAET,CACEO,GAAI,EACJN,KAAM,eACNU,SAAU,YACVX,MAAO,qBAET,CACEO,GAAI,EACJN,KAAM,mBACNU,SAAU,WACVX,MAAO,sBAET,CACEO,GAAI,EACJN,KAAM,mBACNU,SAAU,WACVX,MAAO,6BAET,CACEO,GAAI,EACJN,KAAM,mBACNU,SAAU,SACVX,MAAO,4BAET,CACEO,GAAI,EACJN,KAAM,uBACNU,SAAU,mBACVX,MAAO,2BAET,CACEO,GAAI,EACJN,KAAM,kBACNU,SAAU,eACVX,MAAO,0BAET,CACEO,GAAI,EACJN,KAAM,2BACNU,SAAU,gBACVX,MAAO,wBAET,CACEO,GAAI,EACJN,KAAM,kBACNU,SAAU,WACVX,MAAO,2BAET,CACEO,GAAI,GACJN,KAAM,qBACNU,SAAU,iBACVX,MAAO,2BClDX,SAASY,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKU,KAAOM,MAEvC,KAGtB,IAAMJ,ECfS,CACb,CACEF,GAAI,EACJH,MAAO,qBACPE,WAAW,EACXO,OAAQ,GAEV,CACEN,GAAI,GACJH,MAAO,qBACPE,WAAW,EACXO,OAAQ,GAEV,CACEN,GAAI,EACJH,MAAO,qCACPE,WAAW,EACXO,OAAQ,IDF0BH,KAAI,SAAAP,GAAI,kCACzCA,GADyC,IAE5CN,KAAMe,EAAQT,EAAKU,aAGRG,EAAgB,WAC3B,MAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCJ,mBAASR,GAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAA6BN,mBAAS,IAAtC,mBAAOb,EAAP,KAAcoB,EAAd,KACA,EAA4BP,mBAAS,GAArC,mBAAOJ,EAAP,KAAeY,EAAf,KAsCA,OACE,sBAAK3B,UAAU,MAAf,UACE,+CAEA,uBACE4B,SAtBe,SAACC,GACpBA,EAAMC,iBAEDf,GACHM,GAAqB,GAGlBf,EAAMyB,QACTR,GAAc,GAGZjB,EAAMyB,QAAUhB,KA9BC,WACrB,IAAMiB,EAAU,CACdvB,GAAIwB,KAAKC,IAAL,MAAAD,KAAI,YAAST,EAASZ,KAAI,SAAAP,GAAI,OAAIA,EAAKI,QAAQ,EACnDH,QACAE,WAAW,EACXO,SACAhB,KAAMe,EAAQC,IAGTU,GAAY,SAAAU,GAAQ,4BACrBA,GADqB,CACXH,OAqBdI,GAhBFV,EAAY,IACZC,EAAU,KAwBR,UAGE,sBAAK3B,UAAU,QAAf,UACE,uBACEqC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZtC,UAAU,QACVuC,MAAOjC,EACPkC,SAAU,SAAAX,GACRH,EAAYG,EAAMY,OAAOF,OACrBjB,GACFC,GAAc,MAIlBD,GAEE,sBAAMtB,UAAU,QAAhB,qCAMN,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRA,UAAU,SACVuC,MAAOxB,EACPyB,SAAU,SAACX,GACTF,EAAUe,OAAOb,EAAMY,OAAOF,QAC1BnB,GACFC,GAAqB,IAP3B,UAWE,wBAAQkB,MAAM,IAAII,UAAQ,EAA1B,2BACC3B,EAAgBJ,KAAI,SAAAgC,GAAU,OAC7B,wBACEL,MAAOK,EAAWnC,GADpB,SAIGmC,EAAWzC,MAFPyC,EAAWnC,UAOpBW,GAEE,sBAAMpB,UAAU,QAAhB,qCAMN,wBAAQqC,KAAK,SAAS,UAAQ,eAA9B,oBAIF,yBAASrC,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUW,MAAOa,UE7HzBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.55d5e42f.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <div>\n      <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n        {user.name}\n      </a>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    completed,\n  } = todo;\n\n  const isComplete = completed && 'TodoInfo--completed';\n\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${isComplete}`}>\n      <h2 data-cy=\"titleInput\" className=\"TodoInfo__title\">{title}</h2>\n      {user\n        && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos:Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul>\n    {todos.map((todo:Todo) => (\n      <li\n        className=\"todo__item\"\n        key={todo.id}\n      >\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [isUserError, setSelectedUserError] = useState(false);\n  const [isTitleError, setTitleError] = useState(false);\n  const [todoList, setTodoList] = useState(todos);\n  const [title, setTitleNew] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const handlerNewTodo = () => {\n    const newTodo = {\n      id: Math.max(...(todoList.map(todo => todo.id))) + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    return setTodoList(prevTodo => (\n      [...prevTodo, newTodo]\n    ));\n  };\n\n  const clearForm = () => {\n    setTitleNew('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setSelectedUserError(true);\n    }\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (title.trim() && userId) {\n      handlerNewTodo();\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            className=\"input\"\n            value={title}\n            onChange={event => {\n              setTitleNew(event.target.value);\n              if (isTitleError) {\n                setTitleError(false);\n              }\n            }}\n          />\n          {(isTitleError)\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            className=\"select\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(Number(event.target.value));\n              if (isUserError) {\n                setSelectedUserError(false);\n              }\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(userSelect => (\n              <option\n                value={userSelect.id}\n                key={userSelect.id}\n              >\n                {userSelect.name}\n              </option>\n            ))}\n          </select>\n\n          {(isUserError)\n            && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <section className=\"TodoList\">\n        <TodoList todos={todoList} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}